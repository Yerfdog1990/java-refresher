<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.baeldung</groupId>
    <artifactId>the-parent-pom-start</artifactId>
    <version>0.1.0</version>

    <name>maven-management_template</name>
    <description>Learn Maven - The Parent POM - Start</description>

    <packaging>jar</packaging>

    <!--
    The Spring Boot parent includes a BOM (Bill of Materials) that specifies versions for hundreds of common dependencies:
        - Spring modules (spring-core, spring-web, spring-data, …)
        - Third-party libs (Jackson, Hibernate, Logback, Tomcat, Micrometer, …)
    Using spring-boot-starter-parent means Spring Boot bundles and manages dependency versions for you.
    You generally do not need to declare versions for common dependencies anywhere in your POM — neither in the <dependencies> section nor in <properties>.
    The spring-boot-starter-parent POM already:
        - Imports the Spring Boot BOM (spring-boot-dependencies), which defines versions for hundreds of libraries.
        - Exposes those versions through Maven properties (like ${jackson.version}, ${hibernate.version}, etc.).
    This saves time, reduces boilerplate, and ensures consistent versions across all dependencies.
    Note:
        1. You only add versions if you want to override Boot’s defaults.
        2. Spring Boot does not automatically set the scope for most libraries, because the correct scope depends on how you use the dependency in your project.
        3. Therefore, the scope remains your responsibility, except when using Spring Boot starters, where Boot predefines the correct scopes for the dependencies it bundles.
    -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
    </parent>

    <dependencies>
        <!-- web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- additional tasks and configurations for build process -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <argLine>-Dnet.bytebuddy.experimental=true</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Prior to JDK 9 and 3.8 Maven versions -->
        <!--
            <maven.compiler.source>21</maven.compiler.source>
            <maven.compiler.target>21</maven.compiler.target>
        -->
        <maven.compiler.release>21</maven.compiler.release>

        <!-- Parent POM already takes care of the version through BOM -->
<!--        <spring.boot.version>3.2.2</spring.boot.version>-->
<!--        <h2.version>2.2.224</h2.version>-->
    </properties>
</project>
